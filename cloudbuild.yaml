steps:
  # Step 1: Stop the main VM to ensure data consistency
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'compute'
      - 'instances'
      - 'stop'
      - '${_GOLDEN_VM_NAME}'
      - '--zone=${_ZONE}'
      - '--project=${_PROJECT_ID}'

  # Step 2: Create a new custom image from the main VM's disk
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'create-custom-image'
    args:
      - 'compute'
      - 'images'
      - 'create'
      - 'mig-updater-image-${BUILD_ID}' # Adding 'id-' ensures the name starts with a letter
      - '--source-disk=${_GOLDEN_VM_NAME}'
      - '--source-disk-zone=${_ZONE}'
      - '--project=${_PROJECT_ID}'
      - '--force'

  # Step 3: Create a new instance template based on the newly created image
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'compute'
      - 'instance-templates'
      - 'create'
      - 'mig-updater-template-${BUILD_ID}'
      - '--machine-type=${_MACHINE_TYPE}'
      - '--region=${_REGION}'
      - '--network=${_NETWORK}'
      - '--subnet=${_SUBNETWORK}'
      - '--image=mig-updater-image-${BUILD_ID}'
      - '--project=${_PROJECT_ID}'
      - '--no-address'

  # Step 4: Update the Managed Instance Group (MIG) with the new instance template
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'compute'
      - 'instance-groups'
      - 'managed'
      - 'rolling-action'
      - 'start-update'
      - '${_MIG_NAME}'
      - '--version=template=mig-updater-template-${BUILD_ID}'
      - '--zone=${_ZONE}'
      - '--project=${_PROJECT_ID}'

substitutions:
  _GOLDEN_VM_NAME: 'test'
  _MIG_NAME: 'instance-group-1'
  _NETWORK: 'vpc'
  _SUBNETWORK: 'eu-subnet'
  _ZONE: 'europe-north1-a'
  _REGION: 'europe-north1'
  _MACHINE_TYPE: 'n1-standard-4'
  _PROJECT_ID: 'yusuffeyizoglu-sandbox'
